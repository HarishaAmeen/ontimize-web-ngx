@import 'ontimize/components/material/style/default-theme.scss';
@import 'ontimize/components/material/style/mixins.scss';
@import 'ontimize/components/material/style/variables.scss';

$md-combo-floating-placeholder-scale-factor: 0.75 !default;

// Gradient for showing the dashed line when the combo is disabled.
$md-combo-underline-disabled-background-image: linear-gradient(to right,
        rgba(0, 0, 0, 0.26) 0%, rgba(0, 0, 0, 0.26) 33%, transparent 0%);

/**
 * Undo the red box-shadow glow added by Firefox on invalid combos.
 * See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-ui-invalid
 */
:-moz-ui-invalid {
  box-shadow: none;
}

/**
 * Applies a floating placeholder above the combo itself.
 */
@mixin md-combo-placeholder-floating {
  display: block;
  padding-bottom: 5px;
  transform: translateY(-100%) scale($md-combo-floating-placeholder-scale-factor);
  width: 100% / $md-combo-floating-placeholder-scale-factor;
}

md-combo {
  display: inline-block;
  position: relative;
  font-family: $md-font-family;

  // To avoid problems with text-align.
  text-align: left;
  [dir='rtl'] & {
    text-align: right;
  }
}

// Global wrapper. We need to apply margin to the element for spacing, but
// cannot apply it to the host element directly.
.md-combo-wrapper {
  margin: 16px 0;
}

// We use a table layout to baseline align the prefix and suffix classes.
// The underline is outside of it so it can cover all of the elements under
// this table.
// Flex does not respect the baseline. What we really want is akin to a table
// as want an inline-block where elements don't wrap.
.md-combo-table {
  display: inline-table;
  flex-flow: column;
  vertical-align: bottom;
  width: 100%;

  & > * {
    display: table-cell;
  }
}

// The combo element proper.
.md-combo-element {
  // Font needs to be inherited, because by default <select> has a system font.
  font: inherit;

  /* remove default appearance from select */
  -moz-appearance: none;
  -webkit-appearance: none;
  -ms-flex-preferred-size: auto; //IE fix

  // By default, <select> has a padding, border, outline and a default width.
  border: none;
  outline: none;
  padding: 0;
  width: 100%;

  &.md-end {
    text-align: right;

    [dir='rtl'] & {
      text-align: left;
    }
  }
}

.md-combo-infix {
  position: relative;
  width: 100%;
}

// The placeholder label. This is invisible unless it is. The logic to show it is
// basically `empty || (float && (!empty || focused))`. Float is dependent on the
// `floatingPlaceholder` combo.
.md-combo-placeholder {
  // The placeholder is after the <select>, but needs to be aligned top-left of the
  // infix <div>.
  position: absolute;
  left: 0;
  top: 0;

  font-size: 100%;
  pointer-events: none;  // We shouldn't catch mouse events (let them through).
  z-index: 1;

  // Put ellipsis text overflow.
  width: 100%;
  display: none;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow-x: hidden;

  transform: translateY(0);
  transform-origin: bottom left;
  transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,
              scale $swift-ease-out-duration $swift-ease-out-timing-function,
              color $swift-ease-out-duration $swift-ease-out-timing-function,
              width $swift-ease-out-duration $swift-ease-out-timing-function;

  &.md-empty {
    display: block;
    cursor: text;
  }

  // Show the placeholder above the combo when it's not empty, or focused.
  &.md-float:not(.md-empty), &.md-float.md-focused {
    @include md-combo-placeholder-floating;
  }

  [dir='rtl'] & {
    transform-origin: bottom right;
  }
}

// Pseudo-class for Chrome and Safari auto-fill to move the placeholder to
// the floating position. This is necessary because these browsers do not actually
// fire any events when a form auto-fill is occurring.
// Once the autofill is committed, a change event happen and the regular md-combo
// classes take over to fulfill this behaviour.
combo:-webkit-autofill + .md-combo-placeholder {
  @include md-combo-placeholder-floating;
}

// The underline is what's shown under the combo, its prefix and its suffix.
// The ripple is the blue animation coming on top of it.
.md-combo-underline {
  position: absolute;
  height: 1px;
  width: 100%;
  margin-top: 4px;
  border-top-width: 1px;
  border-top-style: solid;

  &.md-disabled {
    border-top: 0;
    background-image: $md-combo-underline-disabled-background-image;
    background-position: 0;
    background-size: 4px 1px;
    background-repeat: repeat-x;
  }

  .md-combo-ripple {
    position: absolute;
    height: 2px;
    z-index: 1;
    top: -1px;
    width: 100%;
    transform-origin: top;
    opacity: 0;
    transform: scaleY(0);
    transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,
                opacity $swift-ease-out-duration $swift-ease-out-timing-function;

    &.md-focused {
      opacity: 1;
      transform: scaleY(1);
    }
  }
}

.combo-arrow-btn {
  position: absolute;
  top: 0px;
  right: 4px;
  /* Default icon formatting */
  i {
    display: inline-block;
    font-style: normal;
    position: relative;
  }

  /* Additional formatting for arrow icon */
  i.arrow-down {
      width: 0.4em;
      height: 0.4em;
      border-right: 0.2em solid #757575;
      border-top: 0.2em solid #757575;
      transform: rotate(135deg);
      margin: 0;
      padding: 0
  }

}

.md-combo {
  height: 60px;
}

